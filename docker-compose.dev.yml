version: "3.8"
services:
  mongodb:
    container_name: DB
    build:
      context: ./packages/api/configs/db/
      dockerfile: ./Dockerfile
    ports:
      - "${PORT_DB}:${PORT_DB}"
    volumes:
      - type: volume
        source: data
        target: /data/db
    command:
      - mongod
    env_file:
      - ./packages/api/configs/db/.env.mongo
    healthcheck:
      test: exit 0
      interval: 10s
      timeout: 3s
      start_period: 10s
      retries: 3
  backend:
    container_name: BE
    build:
      context: ./packages/api/
      dockerfile: ./configs/docker/dev.dockerfile
    ports:
      - "${PORT_API}:${PORT_API}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: volume
        source: logs
        target: /app/logs
      - type: volume
        target: /app/node_modules
      - type: bind
        source: ./packages/api
        target: /app
    env_file:
      - ./configs/env/.env.dev
      - ./packages/api/configs/env/.env.dev
    depends_on:
      - mongodb
    healthcheck:
      test: exit 0
      interval: 10s
      timeout: 3s
      start_period: 10s
      retries: 3
#  frontend:
#    container_name: FE
#    build:
#      context: ./packages/client/configs/docker/.
#      dockerfile: ./Dockerfile
#    ports:
#      - "${30001}:${PORT_CLIENT}"
#    volumes:
#      - type: bind
#        source: ./packages/client
#        target: /app
#      - type: volume
#        target: /app/node_modules
#    env_file:
#      - ./configs/env/.env
#    depends_on:
#      - backend
volumes:
  data:
  logs:
